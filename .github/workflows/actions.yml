# name: Deploy Infrastructure 

# on:
#   push:
#     branches:
#       - main

# jobs:
#   deploy_site:
#     name: Deploy Infrastructure
#     runs-on: ubuntu-latest
#     defaults:
#       run:
#         working-directory: terraform
    
#     steps:
#     - name: Checkout Repo
#       uses: actions/checkout@v2  # Use v2 for the latest features
    
#     - name: Setup Terraform
#       uses: hashicorp/setup-terraform@v1

#     - name: Terraform Init
#       run: terraform init
#       env:
#         AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#         AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    
#     - name: Terraform Format
#       run: terraform fmt -check
#       # The '-check' option makes the command exit with a non-zero exit code if any files require formatting.
    
#     - name: Terraform Validate
#       run: terraform validate
    
#     - name: Terraform Plan
#       run: terraform plan
#       # Outputs the actions that would be performed, does not apply the changes
#       env:
#         AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#         AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    
#     - name: Terraform Apply
#       run: terraform apply -auto-approve
#       env:
#         AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
#         AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}


name: Deploy Infrastructure 

on:
  push:
    branches:
      - main

jobs:
  deploy_site:
    name: Deploy Site
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Repo
      uses: actions/checkout@v2
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      
    - name: Execute Terraform in Subdirectories
      run: |
        for dir in terraform/*; do
          if [ -d "$dir" ]; then
            cd $dir
            terraform init
            terraform fmt -check
            terraform validate
            terraform plan
            terraform apply -auto-approve
            cd - 
          fi
        done
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
